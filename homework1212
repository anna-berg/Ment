package com.berg.homework1212.homework;

import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Path;
import java.util.ArrayList;
import java.util.List;
import java.util.Map;
import java.util.stream.Collectors;
import java.util.stream.Stream;

import static java.nio.charset.StandardCharsets.UTF_8;

public class Helper {

    public static List<Product> readNameAndDescription(Path filePath) throws IOException {
        try (Stream<String> lines = Files.lines(filePath, UTF_8)) {
            return lines.map(s -> s.split(","))
                    .skip(1)
                    .map(strings -> new Product(Integer.parseInt(strings[0]), strings[1], strings[2]))
                    .collect(Collectors.toList());
        }
    }

    public static Map<Integer, Double> readPrice(Path filePath) throws IOException {
        try (Stream<String> lines = Files.lines(filePath, UTF_8)) {
            return lines.map(s -> s.split(","))
                    .skip(1)
                    .collect(Collectors.toMap(e -> Integer.parseInt(e[0]), e -> Double.valueOf(e[1])));
        }
    }

    public static void writeToFile(Path filePath, List<Product> productList) throws IOException {
        Path errorPath = Path.of("/home/anuta/Ment/src/com/berg/homework1212/homework/resources/errors.csv");

        List<String> resultProducts = new ArrayList<>();
        List<String> errors = new ArrayList<>();
        String headers = "ID,NAME,PRICE";
        resultProducts.add(headers);
        for (Product product : productList) {
            if (product.isInformationFull()) {
                resultProducts.add(String.join(",",
                        String.valueOf(product.getId()),
                        product.getName(),
                        String.valueOf(product.getPrice())));
            } else {
                errors.add(String.valueOf(product.getId()));
            }
        }
        Files.write(filePath, resultProducts);
        Files.write(errorPath, errors);
    }

    public static List<Product> addPriceToProduct(List<Product> productList, Map<Integer, Double> priceMap) {
        for (Product product : productList) {
            for (Map.Entry<Integer, Double> entry : priceMap.entrySet()) {
                if (entry.getKey() == product.getId()) {
                    product.setPrice(entry.getValue());
                }
            }
        }
        return productList;
    }
}

package com.berg.homework1212.homework;

public class Product {

    private int id;
    private double price;
    private String name;
    private String description;

    public Product(int id, String name, String description) {
        this.id = id;
        this.name = name;
        this.description = description;
    }

    public boolean isInformationFull() {
        return this.price != 0 && this.name != null && this.description != null;
    }

    public int getId() {
        return id;
    }

    public void setId(int id) {
        this.id = id;
    }

    public double getPrice() {
        return price;
    }

    public void setPrice(double price) {
        this.price = price;
    }

    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public String getDescription() {
        return description;
    }

    public void setDescription(String description) {
        this.description = description;
    }

    @Override
    public String toString() {
        return "Product{" +
                "id=" + id +
                ", price=" + price +
                ", name='" + name + '\'' +
                ", description='" + description + '\'' +
                '}';
    }
}

package com.berg.homework1212.homework;

import java.io.IOException;
import java.nio.file.Path;
import java.util.List;
import java.util.Map;

public class Runner {

    public static void main(String[] args) throws IOException {
        Path file1 = Path.of("/home/anuta/Ment/src/com/berg/homework1212/homework/resources/items-name.csv");
        Path file2 = Path.of("/home/anuta/Ment/src/com/berg/homework1212/homework/resources/items-price.csv");
        Path file3 = Path.of("/home/anuta/Ment/src/com/berg/homework1212/homework/resources/result.csv");

        List<Product> productList = Helper.readNameAndDescription(file1);
        Map<Integer, Double> priceMap = Helper.readPrice(file2);

        List<Product> products = Helper.addPriceToProduct(productList, priceMap);

        Helper.writeToFile(file3, products);
    }
}
